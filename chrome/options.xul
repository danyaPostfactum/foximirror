<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://shadia/content/css/global.css" type="text/css"?>


<prefwindow xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
	xmlns:html="http://www.w3.org/1999/xhtml"
	title="shadia options"
	autosize="true"
	centerscreen="true"
	resizable="yes"
	id="foxiFrameOptDlg"
	buttons="extra2,accept"
	buttonlabelextra2="recomended"
	ondialogextra2="setRecomendedValues()"
	ondialogaccept=""
	onclose="save()"
	onload="onLoad()"
	>
<!-- 	ondialogextra1 = ""
	buttons="accept"
	persist="screenX,screenY,sizemode" -->

<html:style>
	prefpane{-moz-user-focus:normal!important}
	#vbox{outline:2px solid #67B6E7;-moz-outline-radius:2px}
	#window-menu menuitem:hover{outline:2px solid #67B6E7;-moz-outline-radius:2px}
	#descriptionbox{
		background:lightyellow;
		-moz-box-orient:vertical;
		white-space:pre;
		-moz-user-select:text!important;
		-moz-user-focus:normal!important
	}
	
</html:style>

<prefpane id="vbox1" oncommand="schedule(save)" oninput="schedule(save)" flex="1">
  <textbox style="position:fixed; top:-100px"/>
  <hbox>
	<button label='configure editor' oncommand="window.openDialog('chrome://shadia/content/utils/prefSetters/changeeditor.xul')"/>
	<spacer flex='1'/>
	<shadiaglue/>	
  </hbox>
  <preferences>
	<preference id="dump-pref" name="extensions.shadia.dumpToConsole" type="bool" />
	<preference id="startKeys-pref" name="extensions.shadia.startKeys" type="string" />
  </preferences>
  <hbox tooltiptext="a|b => KeyEvent['DOM_VK_'+A] or KeyEvent['DOM_VK_'+B]">
	<label value="key1"/>
	<textbox preference="startKeys-pref" flex="1" placeholder="" id="pf"/>
	<toolbarbutton label="+"/>	
  </hbox>
  <hbox>
	<checkbox label="dump to error Console (ctrl+shift+j)" preference="dump-pref" id="dump"/>
  </hbox>
<description flex="1"> 
	<html:pre id='descriptionbox'>
	1
	2
	3
	4
	5
	6
	7
	8
	9
	10
	11
	12
	13
	14
	15
	16
	17	
	</html:pre>
</description>
  <separator/>

</prefpane>

<script type="application/x-javascript" ><![CDATA[
window.addEventListener("load", function(){
	shadia.toggle = function() {
	if(this.on)
		this.finish()
	else
		this.start()
	setTimeout(this.finish.bind(this), 800)
	}
}, false)
var modifierRe = /(shift|ctrl|meta|alt)(-|$)/ig
$("pf").addEventListener("keydown", function(event) {	
	var newKey=parseEvent(event);
	if (newKey.replace(modifierRe, '')) {
		if (/left|right/i.test(newKey))
			return
		var o = this.value.split(/\|+/);
		if (o.indexOf(newKey) == -1) {
			var start = this.selectionStart, cur = 0
			for(var i = 0; i < o.length; i++) {
				cur += o[i].length
				dump(cur,start,i)
				if (start > cur) {
					cur ++
					continue
				}
				break
			}
			cur -= o[i].length
			if (/back|delete/i.test(newKey)) {
				if (o[i] == '')
					o.splice(i, 1)
				else
					o[i] = ''
			} else {
				o[i] = newKey
			}
				
			
			this.value = o.join('|').replace(/\|+/g,'|')
			this.selectionStart = this.selectionEnd = cur
			
			setPref('extensions.shadia.startKeys', this.value);
			schedule(save)
		}
	}
	event.preventDefault();event.stopPropagation()
}, true)
$("pf").addEventListener("blur", function(event) {
	setPref('extensions.shadia.startKeys', this.value);
	schedule(save)
}, true)
$("pf").nextSibling.addEventListener("click", function() {
	var t = this.previousSibling;
	t.value=(t.value+'|').replace(/\|+/g,'|');
	t.focus();
	t.selectionStart=t.selectionEnd=t.value.length
}, true)

var Cc = Components.classes
var Ci = Components.interfaces

Components.utils.import('resource://shadia/main.js')

function $(x)document.getElementById(x)

function save(){
	var panes = document.querySelectorAll('prefpane')
	for (var i=panes.length; i-- ;)
		panes[i].writePreferences(false)
	$shadia.lightStarter.updatePrefs()
}
onLoad = function(){
	document.querySelector('textbox[preference="startKeys-pref"]')
		.setAttribute('placeholder', $shadia.lightStarter.defaultKey)
	
	
	document.documentElement._configureButtons("accept,extra2")
}

function schedule(fn, delay){
	if (fn._timeout != null)
		clearTimeout(fn._timeout)
		
	fn._timeout = setTimeout(fn, delay||200)
}

$shadia.lightStarter.loadScript(window)

$('descriptionbox').textContent = shadia.getMessage()

setRecomendedValues = function(){
	$("pf").value = "PAUSE|F1"
	$("dump").checked = true
	setPref('extensions.shadia.startKeys', "PAUSE|F1");
	schedule(save)
}

parseEvent = function(e){
	var key
	for (var i in KeyEvent){
		if(KeyEvent[i]==e.keyCode){
			key = i.replace('DOM_VK_', '')
			break
		}
	}
	var seq = []
	;['ctrl', 'meta', 'shift', 'alt'].forEach(function(x){
		if(e[x+'Key'])
			seq.push(x)
	})
	seq.push(key)
	return seq.join('-')
}

]]></script>

</prefwindow>
